openapi: 3.0.0
info:
  title: API
  version: 1.0.0
paths:
  /tasks:
    get:
      summary: Get all tasks
      tags:
        - tasks
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    post:
      summary: Create a new task
      tags:
        - tasks
      requestBody:
        description: The task to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: The created task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

  /tasks/{id}:
    patch:
      summary: Update a task by ID
      tags:
        - tasks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Task data to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdate'
      responses:
        '200':
          description: Updated task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid ID supplied
        '404':
          description: Task not found

    delete:
      summary: Delete a task by ID
      tags:
        - tasks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Task successfully deleted
        '400':
          description: Invalid ID supplied
        '404':
          description: Task not found

  /users/{user_id}/tasks:
    get:
      summary: Get tasks by use ID
      tags:
        - tasks
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            format: int64
          description: User ID
      responses:
        '200':
          description: A list of users tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '404':
          description: User not found
        '500':
          description: Server Error

  /users:
    get:
      summary: Get all users
      tags:
        - users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      tags:
        - users
      requestBody:
        description: The user to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: The created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{id}:
      patch:
        summary: Update an user by ID
        tags:
          - users
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int64
        requestBody:
          description: User data to update
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdate'
        responses:
          '200':
            description: Updated user
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
          '400':
            description: Invalid ID supplied
          '404':
            description: User not found

      delete:
        summary: Delete an user by ID
        tags:
          - users
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int64
        responses:
          '204':
            description: User successfully deleted
          '400':
            description: Invalid ID supplied
          '404':
            description: User not found

components:
    schemas:
      Task:
        type: object
        properties:
          id:
            type: integer
            format: uint
          task:
            type: string
          is_done:
            type: boolean
          user_id:
            type: integer
            format: uint

      TaskUpdate:
        type: object
        properties:
          task:
            type: string
          is_done:
            type: boolean

      User:
        type: object
        properties:
          id:
            type: integer
            format: uint
          email:
            type: string
          password:
            type: string
          tasks:
            type: array
            items:
              $ref: '#/components/schemas/Task'

      UserUpdate:
        type: object
        properties:
          user:
            type: string
          password:
            type: string